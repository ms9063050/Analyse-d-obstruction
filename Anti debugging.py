import os 
import pefile 

def fonction_antiDebugg(filepath):

 pe = pefile.PE(filepath)
 liste = ["CheckRemoteDebuggerPresent",
        "CheckRemoteDebuggerPresentEx",
        "CreateToolhelp32Snapshot",
        "DebugActiveProcess",
        "DebugActiveProcessStop",
        "DebugBreak",
        "DebugBreakProcess",
        "ContinueDebugEvent",
        "IsDebuggerPresent",
        "OutputDebugString",
        "Ptrace",
        "SetInformationThread",
        "SuspendThread",
        "WaitForDebugEvent",
        "Wow64SetThreadContext",
        "ZwSetInformationThread",
        "NtYieldExecution",
        "RtlAddVectoredExceptionHandler",
        "RtlAddVectoredContinueHandler",
        "RtlCaptureContext",
        "RtlDeleteFunctionTable",
        "RtlDeleteGrowableFunctionTable",
        "RtlInstallFunctionTableCallback",
        "RtlRemoveVectoredExceptionHandler",
        "RtlRestoreContext",
        "RtlUnwindEx",
        "RtlVirtualUnwind",
        "SymSetOptions",
        "SymInitialize",
        "SymCleanup",
        "SymGetOptions",
        "SymGetSearchPath",
        "SymGetModuleInfo",
        "SymGetModuleInfoEx",
        "SymGetModuleBase",
        "SymGetLineFromAddr",
        "SymGetLineFromAddr64",
        "SymGetLineFromName",
        "SymGetLineFromName64",
        "SymEnumSymbols",
        "SymEnumSymbolsForAddr",
        "SymFromAddr",
        "SymFromName",
        "SymFromToken",
        "SymLoadModuleEx",
        "SymUnloadModule",
        "SymUnDName",
        "SymSetParentWindow",
        "SymGetTypeInfo",
        "SymEnumTypes",
        "SymEnumTypesByName",
        "SymEnumTypesByIndex",
        "SymEnumSymbolsW",
        "SymEnumSymbolsEx",
        "SymEnumSourceFiles",
        "SymEnumProcesses",
        "SymGetSymbolFile",
        "SymGetSymbolFileW",
        "SymGetFileLineOffsets64",
        "SymGetLineNext",
        "SymGetLinePrev",
        "SymMatchString",
        "SymSearch",
        "SymLoadModule64",
        "SymGetSymFromAddr64",
        "SymGetSymFromName64",
        "SymGetLineFromAddrEx",
        "SymGetLineFromNameEx",
        "SymGetModuleInfoW",
        "SymGetSymbolInfo",
        "SymGetSymbolInfoW",
        "SymGetSymbol",
        "SymGetSymbolW",
        "SymGetTypeFromName",
        "SymGetTypeFromNameW",
        "SymEnumSourceFilesW",
        "SymEnumProcessesW",
        "SymSetSearchPath",
        "SymSetSearchPathW",
        "SymGetSearchPathW",
        "SymGetOptionsW",
        "SymGetLineFromAddr64W",
        "SymGetLineFromName64W",
        "SymGetModuleInfoExW",
        "SymFromAddrW",
        "SymFromNameW",
        "SymEnumSymbolsW64",
        "SymEnumSymbolsForAddrW",
        "SymEnumSourceFilesW64",
        "SymEnumTypesW",
        "SymEnumTypesW64",
        "SymLoadModuleExW",
        "SymLoadModuleW",
        "SymSetOptionsW",
        "SymSetParentWindowW",
        "SymSetContext",
        "SymSetContextW",
        "SymGetContext",
        "SymGetContextW",
        "SymSetScopeFromAddr",
        "SymSetScopeFromAddr"
    ]

 for entry in pe.DIRECTORY_ENTRY_IMPORT:
     if entry.dll.lower() == "kernel32.dll":
         for imp in entry.imports:
             for x in liste :
                 if imp.name is not None and imp.name.lower() == x.lower() :
                        print("Debugger detected!")
                        return True
     else:
        print("Debugger not detected.")
        return False


Resultat = fonction_antiDebugg(r"C:\Users\narimene\Downloads\Install League of Legends euw (1).exe")
